{"version":3,"sources":["components/Header/Button.tsx","assets/img/pizza-logo.svg","components/Header/Header.tsx","redux/HelperFunctions/HelperForBasketReducer.tsx","redux/basketReducer.ts","components/CardProduct/AddPizzaBtn.tsx","components/CardProduct/Product.tsx","redux/productsReducer.ts","data/products.ts","components/TopFilter/ProductFilter.tsx","components/TopFilter/PopupFilter.tsx","components/TopFilter/LowFilter.tsx","components/TopFilter/TopMainFilter.tsx","components/TopFilter/sortFunction/sortedArrayProduct.ts","components/ProductsList.tsx","redux/basketSelector.ts","components/Bascket/Items/CardItem/CardItem.tsx","components/Bascket/Items/ProductItem.jsx.tsx","components/Bascket/Items/CardItem/FullBasecket.tsx","assets/img/empty-cart.png","components/Bascket/Items/CardItem/EmptyBascket.tsx","components/Bascket/Basket.tsx","components/MyOrder/MyOrder.tsx","App.tsx","redux/strore.tsx","index.tsx"],"names":["Button","useSelector","state","basketPage","totalPrice","totalProductCount","className","to","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Header","src","logo","alt","comparePiazza","basket","currentPizza","find","pizza","title","price","dough","size","initialState","isEmpty","actions","product","type","id","AddPizzaBtn","dispatch","useDispatch","count","onClick","Product","props","minPrice","arrSizePizzas","Object","values","useState","small","thin","setPizza","countPrise","useCallback","ratioSize","medium","ratioDough","newPrice","Math","floor","useEffect","onChangeForm","popsName","content","prevState","map","item","statusFilter","value","isChecked","pizzasFilter","products","thick","large","ProductFilter","productFilter","productPage","onChangeFilterByProduct","classNames","PopupFilter","setModal","onChangeFilter","LowFilter","modal","TopMainFileter","sortedArrayProduct","pizzaFilterByProductValue","sortValue","filter","includes","sort","a","b","toLowerCase","ProductsList","getBasket","createSelector","sate","oldArr","index","array","findIndex","countItem","filterd","length","CardItem","onAddProduct","onRemoveProduct","ProductItem","FullBascket","onClear","EmptyBascket","bascket","Basket","MyOrder","data","console","log","JSON","stringify","App","isEmptyfromState","setEmpty","path","exact","reducers","combineReducers","action","newProduct","Date","now","toString","compareProduct","undefined","countPizza","i","reduce","coutner","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a2ab0de.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/strore\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Button = () => {\r\n    const {totalPrice, totalProductCount} = useSelector((state:AppStateType) => state.basketPage)\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"header__cart\">\r\n            <NavLink to=\"/basket\" className=\"button button--cart\">\r\n                <span>{totalPrice} ₽</span>\r\n                <div className=\"button__delimiter\"></div>\r\n                <svg\r\n                    width=\"18\"\r\n                    height=\"18\"\r\n                    viewBox=\"0 0 18 18\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                        stroke=\"white\"\r\n                        strokeWidth=\"1.8\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                    />\r\n                    <path\r\n                        d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                        stroke=\"white\"\r\n                        strokeWidth=\"1.8\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                    />\r\n                    <path\r\n                        d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                        stroke=\"white\"\r\n                        strokeWidth=\"1.8\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                    />\r\n                </svg>\r\n                <span>{totalProductCount}</span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport {\r\n    Button\r\n}","export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","import {Button} from \"./Button\";\r\nimport logo from '../../assets/img/pizza-logo.svg'\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__logo\">\r\n                    <img width=\"38\" src={logo} alt=\"Pizza logo\" />\r\n                    <div>\r\n                        <h1>React Pizza</h1>\r\n                        <p>самая вкусная пицца во вселенной</p>\r\n                    </div>\r\n                </div>\r\n                <Button/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport {Header}","\r\nimport {BasketType} from \"../basketReducer\";\r\n\r\nexport const comparePiazza = (basket:Array<BasketType>, currentPizza:BasketType) => {\r\n   return  basket.find(pizza => pizza.title === currentPizza.title\r\n        &&  pizza.price === currentPizza.price && pizza.dough === currentPizza.dough\r\n        && pizza.size === currentPizza.size)\r\n}\r\n\r\n","import {InferActionTypes} from \"./strore\";\r\nimport {comparePiazza} from \"./HelperFunctions/HelperForBasketReducer\";\r\n\r\nconst initialState = {\r\n    isEmpty: false,\r\n    totalPrice: 0,\r\n    totalProductCount: 0,\r\n    basket: [] as Array<BasketType>,\r\n}\r\n\r\nexport const basketReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_PRODUCT_IN_BASKET\": {\r\n            const newProduct = {\r\n                id: Date.now().toString(),\r\n                count: 1,\r\n                ...action.product\r\n            }\r\n            const compareProduct =  comparePiazza(state.basket, newProduct)\r\n            if(compareProduct !== undefined){\r\n                let countPizza = compareProduct.count ? compareProduct.count + 1 : 1\r\n                compareProduct.count = countPizza\r\n                return {\r\n                    ...state,\r\n                    basket: [...state.basket.filter(i => i.id !== compareProduct.id),\r\n                        compareProduct\r\n                    ],\r\n\r\n                    totalPrice: state.totalPrice + newProduct.price,\r\n                    totalProductCount: state.basket.reduce((coutner, item)=>{\r\n                        if (item.count){\r\n                            return coutner + item.count\r\n                        }else return coutner\r\n                    },0),\r\n                    isEmpty: true,\r\n                };\r\n            }else {\r\n                return {\r\n                    ...state,\r\n                    basket: [...state.basket, {...newProduct, count: 1}],\r\n                    totalPrice: state.totalPrice + newProduct.price,\r\n                    totalProductCount: state.totalProductCount + 1,\r\n                    isEmpty: true,\r\n                };\r\n            }\r\n        }\r\n        case \"CLEAR_PRODUCT\": {\r\n            return {\r\n                ...state, ...initialState\r\n            }\r\n        }\r\n        case \"ADD_PRODUCT_BY_BASKET\": {\r\n            let price = 0\r\n            return {\r\n                ...state, basket: [...state.basket.map(item => {\r\n                    if (item.id === action.id && item.count){\r\n                        item.count= item.count +1\r\n                        price = item.price\r\n                        return item\r\n                    }\r\n                    return item\r\n                })],\r\n                totalPrice: state.totalPrice + price,\r\n                totalProductCount: state.totalProductCount + 1\r\n            }\r\n        }\r\n        case \"REMOVE_PRODUCT_BY_BASKET\": {\r\n            if (state.basket.find(item => item.id === action.id)?.count === 0){\r\n                return {\r\n                    ...state, basket: [...state.basket.filter(i => i.id !== action.id)]\r\n                }\r\n            }\r\n            let price = 0;\r\n            return {\r\n                ...state, basket: [...state.basket.map(item => {\r\n                    if (item.id === action.id && item.count){\r\n                        item.count = item.count -1\r\n                        price = item.price\r\n                        return item\r\n                    }\r\n                    return item\r\n                })],\r\n                totalPrice: state.totalPrice - price,\r\n                totalProductCount: state.totalProductCount -1\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const actions = {\r\n    setProductInBasket: (product: BasketType) => {\r\n        return ({type: 'SET_PRODUCT_IN_BASKET', product} as const)\r\n    },\r\n    clearBasket: () => {\r\n        return ({type: 'CLEAR_PRODUCT'} as const)\r\n    },\r\n    addProduct: (id: number | string) => {\r\n        return ({type: 'ADD_PRODUCT_BY_BASKET', id} as const)\r\n    },\r\n    removeProduct: (id: number | string) => {\r\n        return ({type: 'REMOVE_PRODUCT_BY_BASKET', id} as const)\r\n    },\r\n    setCountByChangedPizza: (payload:BasketType) => {\r\n        return ({type: 'COUNT_CHANGED-PIZZA', payload} as const)\r\n    }\r\n}\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type BasketType = {\r\n    id?: string\r\n    title: string\r\n    src: string\r\n    price: number\r\n    size: number\r\n    dough: string\r\n    count?: number\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n\r\n\r\n","import {comparePiazza} from \"../../redux/HelperFunctions/HelperForBasketReducer\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/strore\";\r\nimport {actions} from \"../../redux/basketReducer\";\r\n\r\n\r\n\r\ntype PropsType = {\r\n    pizza: {\r\n        title: string\r\n        src: string\r\n        price: number\r\n        size: number\r\n        dough: string\r\n    }\r\n}\r\n\r\n\r\nexport const AddPizzaBtn:React.FC<PropsType> = ({pizza}) => {\r\n    const dispatch = useDispatch()\r\n    const {basket} = useSelector((state:AppStateType)=> state.basketPage)\r\n    const onAddToOrder = () => {\r\n        dispatch(actions.setProductInBasket(pizza))\r\n    }\r\n\r\n    const count = comparePiazza(basket,pizza)\r\n\r\n    return (\r\n        <div className=\"pizza-block__bottom\">\r\n            <div className=\"pizza-block__price\">от {pizza.price} ₽</div>\r\n            <div className=\"button button--outline button--add\" onClick={onAddToOrder}>\r\n                <svg\r\n                    width=\"12\"\r\n                    height=\"12\"\r\n                    viewBox=\"0 0 12 12\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                        fill=\"white\"\r\n                    />\r\n                </svg>\r\n                <span>\r\n                      Добавить\r\n                    </span>\r\n                {count ? <i>{count.count}</i>\r\n                : <i>0</i>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect, useState} from 'react'\r\nimport {ProductType} from \"../../redux/productsReducer\";\r\nimport { AddPizzaBtn } from './AddPizzaBtn';\r\n\r\n\r\n\r\nconst Product: React.FC<ProductType> = (props) => {\r\n\r\n\r\n    const {title, src, minPrice, size, dough,} = props\r\n    const arrSizePizzas = Object.values(size)\r\n\r\n\r\n    const [pizza, setPizza] = useState({\r\n        title: title,\r\n        src: src,\r\n        price: minPrice,\r\n        size: size.small,\r\n        dough: dough.thin,\r\n    })\r\n\r\n    const countPrise = useCallback(() => {\r\n        let ratioSize = 1;\r\n        if (pizza.size !== size.small) {\r\n            ratioSize = +pizza.size === +size.medium ? 1.2 : 1.4\r\n        }\r\n        let ratioDough = pizza.dough === dough.thin ? 1 : 1.2\r\n        const newPrice = Math.floor(minPrice * ratioSize * ratioDough)\r\n\r\n        if (newPrice === pizza.price){\r\n            return\r\n        }\r\n        setPizza({...pizza, price: newPrice})\r\n    },[pizza])\r\n\r\n    useEffect(()=> {\r\n        countPrise()\r\n\r\n    },[pizza])\r\n\r\n\r\n\r\n\r\n\r\n    const onChangeForm = (popsName: string, content: string | number) => {\r\n        setPizza((prevState => {\r\n            return {...prevState, [popsName]: content}\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <img\r\n                width={200 + 'px'}\r\n                height={200 + 'px'}\r\n                className=\"pizza-block__image\"\r\n                src={src}\r\n                alt=\"Pizza\"\r\n            />\r\n            <h4\r\n                onClick={() => {\r\n                    onChangeForm('title', title)\r\n                }}\r\n                className=\"pizza-block__title\"\r\n            >{title}</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {Object.values(dough).map(item => {\r\n                        return <li\r\n                            key={item}\r\n                            className={item === pizza.dough ? 'active' : ''}\r\n                            onClick={() => onChangeForm('dough', item)}\r\n                        >\r\n                            {item}</li>\r\n                    })}\r\n                </ul>\r\n                <ul>\r\n                    {arrSizePizzas.map(item => {\r\n                        return <li\r\n                            key={item}\r\n                            className={item === pizza.size ? 'active' : ''}\r\n                            onClick={() => onChangeForm('size', item)}\r\n                        >\r\n                            {item} см.\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <AddPizzaBtn pizza={pizza}/>\r\n        </div>\r\n    )\r\n}\r\nexport {\r\n    Product\r\n}\r\n\r\n","import {productsData} from \"../data/products\";\r\nimport {InferActionTypes} from \"./strore\";\r\nconst initialState = {\r\n    statusFilter:[\r\n        {value: 'price', title: 'цене', isChecked: true} ,\r\n        {value: 'alphabet', title: 'по алфавиту', isChecked:false}\r\n        ] as Array<StatusFilterType>,\r\n    pizzasFilter: [\r\n        {id: '1', title: 'Все', isChecked: true, value: 'all'},\r\n        {id: '2', title: 'Мясные', isChecked: false, value: 'meat'},\r\n        {id: '3', title: 'Вегетарианская', isChecked: false, value: 'vegan'},\r\n        {id: '4', title: 'Гриль', isChecked: false, value: 'grill'},\r\n        {id: '5', title: 'Острые', isChecked: false, value: 'hot'},\r\n        {id: '6', title: 'Закрытые', isChecked: false, value: 'closet'},\r\n    ] as Array<FilterProductType>,\r\n    products: productsData as Array<ProductType>\r\n}\r\n\r\n\r\nexport const productReducer = (state = initialState, action:ActionType):InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_FILTER_BY_PRODUCT\": {\r\n            return {\r\n                ...state,\r\n                pizzasFilter: [...state.pizzasFilter.map(item => {\r\n                    action.value === item.value ? item.isChecked = true : item.isChecked = false\r\n                    return item\r\n                })],\r\n            }\r\n        }\r\n        case \"SET_FILTER_BY_PRISE\": {\r\n            return {...state,\r\n                    statusFilter: [...state.statusFilter.map(item => {\r\n                        action.value === item.value ? item.isChecked = true : item.isChecked = false\r\n                        return item\r\n                    })]\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\nexport const actions = {\r\n    setFilterByProduct: (value:string) =>({type: \"SET_FILTER_BY_PRODUCT\",value}) as const,\r\n    setFilterByPrice: (value:string) => ({type: \"SET_FILTER_BY_PRISE\", value}) as const,\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\ntype ActionType = InferActionTypes<typeof actions>\r\n\r\n\r\nexport type ProductType = {\r\n    id: string,\r\n    src: string,\r\n    title: string,\r\n    dough: {thin: string, thick: string},\r\n    size: {small: number, medium: number, large: number},\r\n    minPrice: number,\r\n    type: string\r\n}\r\nexport type FilterProductType = {\r\n    id: string,\r\n    title: string,\r\n    isChecked: boolean,\r\n    value: string\r\n}\r\nexport type StatusFilterType = {\r\n    value: string,\r\n    title: string,\r\n    isChecked: boolean\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport const productsData = [\r\n    {\r\n        id: '1',\r\n        src: \"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\",\r\n        title: \"Чизбургер-пицца\",\r\n        dough: {thin: \"тонкое\",thick:\"традиционное\"},\r\n        size: {small: 26, medium: 30, large: 40},\r\n        minPrice: 395,\r\n        type: 'closet',\r\n    },\r\n    {\r\n        id: '2',\r\n        src: \"https://oop2.pizzahut.ru/product_pics/small//4/de184c7f73f381efcd5e79ef61ea7b95.png\",\r\n        title: \"Маргарита\",\r\n        dough: {thin: \"тонкое\",thick:\"традиционное\"},\r\n        size: {small: 26, medium: 30, large: 40},\r\n        minPrice: 395,\r\n        type: 'vegan',\r\n    },\r\n    {\r\n        id: '3',\r\n        src: \"https://oop2.pizzahut.ru/product_pics/small//4/07251fc98d3c680af6f65c672eccc26a.png\",\r\n        title: \"Четыре сыра\",\r\n        dough: {thin: \"тонкое\",thick:\"традиционное\"},\r\n        size: {small: 26, medium: 30, large: 40},\r\n        minPrice: 395,\r\n        type: 'vegan',\r\n    },\r\n    {\r\n        id: '4',\r\n        src: \"https://oop2.pizzahut.ru/product_pics/small//4/1da2e1230d5dfc5a3c03f5436947d833.png\",\r\n        title: \"Четыре сыра De Luxe\",\r\n        dough: {thin: \"тонкое\",thick:\"традиционное\"},\r\n        size: {small: 26, medium: 30, large: 40},\r\n        minPrice: 395,\r\n        type: 'vegan',\r\n    },\r\n    {\r\n        id: '5',\r\n        src: \"https://oop2.pizzahut.ru/product_pics/small//4/381d76163e3605aa73c048d3427670dd.png\",\r\n        title: \"Джульетта\",\r\n        dough: {thin: \"тонкое\",thick:\"традиционное\"},\r\n        size: {small: 26, medium: 30, large: 40},\r\n        minPrice: 450,\r\n        type: 'meat, hot',\r\n    },\r\n    {\r\n        id: '6',\r\n        src: \"https://oop2.pizzahut.ru/product_pics/small//4/8a6f7ac476d40460a7b1772edfc230bb.png\",\r\n        title: \"Острая мясная\",\r\n        dough: {thin: \"тонкое\",thick:\"традиционное\"},\r\n        size: {small: 26, medium: 30, large: 40},\r\n        minPrice: 619,\r\n        type: 'hot',\r\n    },\r\n    {\r\n        id: '7',\r\n        src: \"https://oop2.pizzahut.ru/product_pics/small//4/ab23ac6d8d674de4764289abc16bb37d.png\",\r\n        title: \"Супер мясная\",\r\n        dough: {thin: \"тонкое\",thick:\"традиционное\"},\r\n        size: {small: 26, medium: 30, large: 40},\r\n        minPrice: 709,\r\n        type: 'meat',\r\n    },\r\n    {\r\n        id: '9',\r\n        src: \"https://oop2.pizzahut.ru/product_pics/small//4/d0607dc054cf5f74338361c87341ef74.png\",\r\n        title: \"Курица мясная\",\r\n        dough: {thin: \"тонкое\",thick:\"традиционное\"},\r\n        size: {small: 26, medium: 30, large: 40},\r\n        minPrice: 619,\r\n        type: 'grill',\r\n    },\r\n]\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/strore\";\r\nimport classNames from 'classnames'\r\nimport {actions} from '../../redux/productsReducer'\r\n\r\nconst ProductFilter:React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n   const productFilter = useSelector((state:AppStateType) => state.productPage.pizzasFilter)\r\n    const onChangeFilterByProduct = useCallback(((value:string) => {\r\n        dispatch(actions.setFilterByProduct(value))\r\n    }),[dispatch])\r\n    return (\r\n        <ul>\r\n            {productFilter.map(product => {\r\n              return (\r\n                  <li\r\n                      key={product.id}\r\n                      className={classNames({\r\n                      'active' : product.isChecked\r\n                  })}\r\n                    onClick={() => onChangeFilterByProduct(product.value)}\r\n                  >{product.title}</li>\r\n              )\r\n            })}\r\n\r\n\r\n        </ul>\r\n    )\r\n}\r\nexport {\r\n    ProductFilter\r\n}","import { StatusFilterType } from \"../../redux/productsReducer\"\r\nimport React, {useCallback} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actions} from \"../../redux/productsReducer\";\r\n\r\ntype PropsType = {\r\n    statusFilter: Array<StatusFilterType>,\r\n    setModal: (value:boolean)=> void\r\n}\r\n\r\n\r\nconst PopupFilter:React.FC<PropsType> = ({statusFilter,setModal}) => {\r\n    const dispatch = useDispatch()\r\n    const onChangeFilter = useCallback((value:string)=>{\r\n        dispatch(actions.setFilterByPrice(value))\r\n        setModal(false)\r\n    },[dispatch, setModal])\r\n\r\n    return (\r\n        <div className=\"sort__popup\">\r\n            <ul>\r\n                {statusFilter.map(item => {\r\n                    return <li\r\n                        key={item.value}\r\n                        className={item.isChecked ? 'active': ''}\r\n                        onClick={()=>onChangeFilter(item.value)}\r\n                    >\r\n                        {item.title}\r\n                    </li>\r\n                })}\r\n\r\n\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport {\r\nPopupFilter\r\n}","import {PopupFilter} from './PopupFilter'\r\n\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/strore\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst LowFilter = () => {\r\n    const statusFilter = useSelector((state: AppStateType) => state.productPage.statusFilter)\r\n    const [modal, setModal] = useState(false)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"sort\">\r\n            <div className=\"sort__label\">\r\n                <svg\r\n                    width=\"10\"\r\n                    height=\"6\"\r\n                    viewBox=\"0 0 10 6\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n                <b>Сортировка по:</b>\r\n\r\n                <span\r\n                    onClick={() => modal ? setModal(false) : setModal(true)}\r\n                >\r\n                    {/*@ts-ignore*/}\r\n                    {statusFilter.find(item => item.isChecked).title}</span>\r\n            </div>\r\n            {modal && <PopupFilter\r\n                setModal={setModal}\r\n                statusFilter={statusFilter}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\nexport {\r\n    LowFilter\r\n}","import {ProductFilter} from \"./ProductFilter\";\r\nimport {LowFilter} from \"./LowFilter\";\r\n\r\nconst TopMainFileter = () => {\r\n    return (\r\n        <div className=\"content__top\">\r\n            <div className=\"categories\">\r\n                <ProductFilter/>\r\n            </div>\r\n            <LowFilter/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    TopMainFileter\r\n}","import { ProductType } from \"../../../redux/productsReducer\"\r\n\r\n\r\nexport const sortedArrayProduct  = (products:Array<ProductType>,pizzaFilterByProductValue:string,sortValue:string) => {\r\n  const sortedArrayProduct = products.filter(product => {\r\n        if (pizzaFilterByProductValue === 'all') {\r\n            return true\r\n        }\r\n        if (product.type.includes(pizzaFilterByProductValue)) {\r\n            return true\r\n        }\r\n    })\r\n    if (sortValue === 'price'){\r\n        sortedArrayProduct.sort((a,b)=> a.minPrice - b.minPrice)\r\n    }\r\n    if (sortValue === 'alphabet'){\r\n        sortedArrayProduct.sort((a,b) => {\r\n            return  a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1\r\n        })\r\n    }\r\n    return sortedArrayProduct\r\n}\r\n","import {Product} from \"./CardProduct/Product\";\r\nimport {TopMainFileter} from \"./TopFilter/TopMainFilter\"\r\n\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/strore\";\r\nimport {sortedArrayProduct} from \"./TopFilter/sortFunction/sortedArrayProduct\";\r\n\r\nconst ProductsList = () => {\r\n    const {products} = useSelector((state: AppStateType) => state.productPage)\r\n    const sortValue = useSelector((state:AppStateType) =>{\r\n        // @ts-ignore\r\n       return  state.productPage.statusFilter.find(item => item.isChecked).value\r\n    })\r\n    const pizzaFilterByProductValue = useSelector((state: AppStateType) => {\r\n        return state.productPage.pizzasFilter.find(product => product.isChecked === true)\r\n    })\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container\">\r\n                <TopMainFileter/>\r\n                <h2 className=\"content__title\">Все пиццы</h2>\r\n                <div className=\"content__items\">\r\n                    {/*@ts-ignore*/}\r\n                    {sortedArrayProduct(products,pizzaFilterByProductValue.value,sortValue).map(product => {\r\n                        return <Product key={product.id}\r\n                                        title={product.title}\r\n                                        id={product.id}\r\n                                        dough={product.dough}\r\n                                        minPrice={product.minPrice}\r\n                                        size={product.size}\r\n                                        src={product.src}\r\n                                        type={product.type}\r\n                        />\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport {\r\n    ProductsList\r\n}","import {AppStateType} from \"./strore\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getState = ((sate:AppStateType) => sate)\r\n\r\nexport const getBasket = createSelector(getState,(state):Array<SelectedBasketType> => {\r\n  const oldArr = [...state.basketPage.basket]\r\n  return state.basketPage.basket.filter(\r\n        (item, index, array) =>\r\n            index === array.findIndex(a => a.title === item.title && a.price === item.price)\r\n    ).map(item => {\r\n    let countItem = oldArr.filter(filterd => filterd.title === item.title && filterd.price === item.price).length\r\n      return {\r\n        count: countItem, ...item\r\n      }\r\n  })\r\n})\r\n\r\nexport type SelectedBasketType = {\r\n  id?: string\r\n  title: string\r\n  src: string\r\n  price: number\r\n  size: number\r\n  dough: string\r\n  count: number\r\n}\r\n\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/strore\";\r\nimport {getBasket} from \"../../../../redux/basketSelector\";\r\nimport {useCallback} from \"react\";\r\nimport { actions } from \"../../../../redux/basketReducer\";\r\n\r\nconst CardItem = ():any => {\r\n    const basket = useSelector((state:AppStateType) => getBasket(state))\r\n    const dispatch = useDispatch()\r\n    const onAddProduct = useCallback((id) => {\r\n        dispatch(actions.addProduct(id))\r\n\r\n    },[dispatch])\r\n    const onRemoveProduct = useCallback((id) => {\r\n        dispatch(actions.removeProduct(id))\r\n    },[dispatch])\r\n\r\n    return (\r\n        basket.map(item => {\r\n            return <div className=\"cart__item\" key={item.id}>\r\n                <div className=\"cart__item-img\">\r\n                    <img\r\n                        className=\"pizza-block__image\"\r\n                        src={item.src}\r\n                        alt=\"Pizza\"\r\n                    />\r\n                </div>\r\n                <div className=\"cart__item-info\">\r\n                    <h3>{item.title}</h3>\r\n                    <p>{item.dough}, {item.size} см.</p>\r\n                </div>\r\n                <div className=\"cart__item-count\">\r\n                    <div\r\n                        className=\"button button--outline button--circle cart__item-count-minus\"\r\n                        onClick={() => onRemoveProduct(item.id)}\r\n                    >\r\n                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                            <path\r\n                                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                        </svg>\r\n                    </div>\r\n                    {/*@ts-ignore*/}\r\n                    <b> {item.count}</b>\r\n                    <div\r\n                        className=\"button button--outline button--circle cart__item-count-plus\"\r\n                        onClick={() => {onAddProduct(item.id)}}\r\n                    >\r\n                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                            <path\r\n                                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                        </svg>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"cart__item-price\">\r\n                    <b>{item.price * item.count}</b>\r\n                </div>\r\n                <div className=\"cart__item-remove\">\r\n                    <div className=\"button button--outline button--circle\">\r\n                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                            <path\r\n                                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                        </svg>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        })\r\n    )\r\n\r\n}\r\nexport {\r\n    CardItem\r\n}","import {CardItem} from \"./CardItem/CardItem\";\r\n\r\n\r\n\r\nconst ProductItem = () => {\r\n    return (\r\n            <div className=\"content__items\">\r\n                <CardItem/>\r\n            </div>\r\n    )\r\n}\r\nexport {\r\n    ProductItem\r\n}","\r\nimport {ProductItem} from \"../ProductItem.jsx\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/strore\";\r\nimport {useCallback} from \"react\";\r\nimport {actions} from \"../../../../redux/basketReducer\";\r\n\r\nconst FullBascket = () => {\r\n    const {totalPrice, totalProductCount} = useSelector((state:AppStateType) => state.basketPage)\r\n    const dispatch = useDispatch()\r\n\r\n    const onClear = useCallback(()=>{\r\n        dispatch(actions.clearBasket())\r\n    },[dispatch])\r\n\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n            <div className=\"cart__top\">\r\n                <h2 className=\"content__title\">\r\n                    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                            stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"/>\r\n                        <path\r\n                            d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                            stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"/>\r\n                        <path\r\n                            d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                            stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"/>\r\n                    </svg>\r\n                    Корзина\r\n                </h2>\r\n                <div className=\"cart__clear\" onClick={onClear}>\r\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\r\n                         xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                              strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                        <path\r\n                            d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                            stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"/>\r\n                        <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                              strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                        <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                              strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                    </svg>\r\n\r\n                    <span>Очистить корзину</span>\r\n                </div>\r\n            </div>\r\n            <ProductItem/>\r\n            <div className=\"cart__bottom\">\r\n                <div className=\"cart__bottom-details\">\r\n                    <span> Всего пицц: <b>{totalProductCount} шт.</b> </span>\r\n                    <span> Сумма заказа: <b>{totalPrice} ₽</b> </span>\r\n                </div>\r\n                <div className=\"cart__bottom-buttons\">\r\n                    <NavLink to=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                        <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\"\r\n                                  strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                        </svg>\r\n\r\n                        <span>Вернуться назад</span>\r\n                    </NavLink>\r\n                    <div className=\"button pay-btn\">\r\n                        <NavLink to='/order'>\r\n                            <span>Оплатить сейчас</span>\r\n\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport {\r\n    FullBascket\r\n}","export default __webpack_public_path__ + \"static/media/empty-cart.db905d1f.png\";","import bascket from '../../../../assets/img/empty-cart.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nconst EmptyBascket = () => {\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container container--cart\">\r\n                <div className=\"cart cart--empty\">\r\n                    <h2>Корзина пустая 😕</h2>\r\n                    <p>\r\n                        Вероятней всего, вы не заказывали ещё пиццу.<br/>\r\n                        Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n                    </p>\r\n                    <img src={bascket} alt=\"Empty cart\"/>\r\n                    <NavLink to=\"/\" className=\"button button--black\">\r\n                        <span>Вернуться назад</span>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport {\r\n    EmptyBascket\r\n}","\r\nimport React from \"react\";\r\nimport {FullBascket} from \"./Items/CardItem/FullBasecket\";\r\nimport {EmptyBascket} from \"./Items/CardItem/EmptyBascket\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/strore\";\r\nconst Basket = () => {\r\n    const {isEmpty} = useSelector((state:AppStateType ) =>state.basketPage)\r\n\r\n\r\n    return (\r\n            <div className=\"content\">\r\n                <div className=\"container container--cart\">\r\n                    {isEmpty ?  <FullBascket/> : <EmptyBascket/>}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport {\r\n    Basket\r\n}","import {NavLink} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/strore\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nexport const MyOrder = () => {\r\n    const {basket, totalPrice, totalProductCount} = useSelector((state: AppStateType) => state.basketPage)\r\n\r\n    const [data] = useState({\r\n        basket: basket,\r\n        totalPrice: totalPrice,\r\n        totalProductCount: totalProductCount,\r\n    })\r\n\r\n    const onSubmit = () => {\r\n        console.log(JSON.stringify(data,null, 2))\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container container--cart\">\r\n                <div>\r\n                    <h2 className=\"order-header\">Ваш заказ:</h2>\r\n                    <ul className='order-list'>\r\n                        {\r\n                            basket.map(item => {\r\n                                return (\r\n                                    <li key={item.id}>\r\n                                        <h3>Пицца: - {item.title}</h3>\r\n                                        <p>\r\n                                                <span className='order-description'>\r\n                                                    Размер: {' '}\r\n                                                </span>\r\n                                            <span className='order-value'>\r\n                                                    {item.size} см.\r\n                                                </span>\r\n                                        </p>\r\n                                        <p>\r\n                                                <span className='order-description'>\r\n                                                    Тесто: {' '}\r\n                                                </span>\r\n                                            <span className='order-value'>\r\n                                                    {item.dough}\r\n                                                </span>\r\n                                        </p>\r\n                                        <p>\r\n                                                <span className='order-description'>\r\n                                                    Количество: {' '}\r\n                                                </span>\r\n                                            <span className='order-value'>\r\n                                                    {item.count} шт.\r\n                                                </span>\r\n                                        </p>\r\n                                        <p>\r\n                                                <span className='order-description'>\r\n                                                    Цена за шт: {' '}\r\n                                                </span>\r\n                                            <span className='order-value'>\r\n                                                    {item.price} руб.\r\n                                                </span>\r\n                                        </p>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                    <div className=\"order_summary\">\r\n                        <p>Количество пицц в заказе: {' '} {totalProductCount} шт.</p>\r\n                        <p>Общая стоимость: {' '} {totalPrice} руб.</p>\r\n                    </div>\r\n                    <div className='order-buttons'>\r\n                        <NavLink to='/basket' className=\"button button--black\">\r\n                            <span>Вернуться назад</span>\r\n                        </NavLink>\r\n                        <div className=\"button pay-btn\" onClick={onSubmit}>\r\n                            <span>Оплатить сейчас</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Header} from \"./components/Header/Header\";\n\nimport React, {useEffect, useState} from \"react\";\nimport {ProductsList} from \"./components/ProductsList\";\nimport {Basket} from \"./components/Bascket/Basket\";\nimport {BrowserRouter, Redirect, Route} from 'react-router-dom'\nimport {MyOrder} from \"./components/MyOrder/MyOrder\";\nimport {useSelector} from \"react-redux\";\nimport {AppStateType} from \"./redux/strore\";\n\n\n\n\nfunction App() {\n    const isEmptyfromState = useSelector((state:AppStateType) => state.basketPage.isEmpty)\n    const [isEmpty, setEmpty] = useState(false)\n\n    useEffect(() => {\n        setEmpty(isEmptyfromState)\n        },[isEmptyfromState])\n    return (\n        <BrowserRouter>\n            <div className=\"wrapper\">\n                <Header/>\n                {!isEmpty && <Redirect to=\"/\" />}\n                       <Route path='/' exact>\n                           <ProductsList/>\n                       </Route>\n                    <Route path='/basket'>\n                        <Basket/>\n                    </Route>\n                    <Route path='/order'>\n                        <MyOrder/>\n                    </Route>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {productReducer} from \"./productsReducer\";\r\nimport {basketReducer} from \"./basketReducer\";\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    productPage: productReducer,\r\n    basketPage: basketReducer,\r\n})\r\n\r\n\r\n\r\ntype RootReducer = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducer>\r\n\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> =  ThunkAction<R, AppStateType, unknown, A>\r\nexport type InferActionTypes<T> = T extends {[key: string]: (...arg:any[]) => infer U } ? U: never\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport type MainStateType  = typeof store\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport './scss/app.scss'\nimport store from \"./redux/strore\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}